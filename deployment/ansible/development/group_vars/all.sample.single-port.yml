---
# Set to yes, if you're using pycharm for development
# Otherwise, set no
use_pycharm: yes
# Your linux/mac user that will run ansible
remote_user: lucernae
# Your linux/mac group that will run ansible
remote_group: staff
# Your project location (this repo)
project_path: "/Users/lucernae/Documents/WorkingDir/Projects/kartoza/scanagroempresa-docker"
# True if it will be running on Travis
on_travis: False
# Project name as pycharm namespace
project_name: scanagroempresa-docker

django:
  # extra django app location from deployment folder
  app_location: ../django_project
  volumes:
    - ../submodules/scanagroempresa/django_app:/home/web/extra_app
  environment:
    GEONODE_PREFIX: "''"
    GEONODE_INDEX_PREFIX: "r'^administration/?'"
    SITE_DOMAIN_NAME: 'http://scanagroempresa-docker.test'
    GEOCONTEXT_URL: 'http://localhost:65402'
    CONTACT_US_EMAIL: 'dimas@kartoza.com'
    DEBUG: True
    # Put random string on secret key
    SECRET_KEY: 2510)aks1u*9mgjjss_+s1@rutm3v(sfv5hw8k#*t(jsdmg-
    DJANGO_SETTINGS_MODULE: core.settings.overrides
    RABBITMQ_HOST: rabbitmq
    HAYSTACK_HOST: elasticsearch
    PYTHONPATH: /usr/src/app:/home/web/django_project:/home/web/extra_app
    ROOT_URLCONF: core.root_urls
    DATABASE_NAME: gis
    DATABASE_PASSWORD: docker
    DATABASE_USERNAME: docker
    DATABASE_HOST: db
    # Do not end with slash /
    SITEURL: http://scanagroempresa-docker.test
    SCANAGROEMPRESA_URL: http://scanagroempresa-docker.test/scanagroempresa/
    # Celery settings
    BROKER_URL: amqp://guest:guest@rabbitmq:5672/
    # Set Always Eager to true if you want to debug celery in one thread, which is the uwsgi service (without worker)
    # CELERY_TASK_ALWAYS_EAGER: 'True'
    # Set Always Eager to false to let celery tasks executed by worker
    # CELERY_TASK_ALWAYS_EAGER: 'False'

scanagroempresa:
  command: /usr/sbin/sshd -D
  volumes:
    - ../submodules/scanagroempresa/django_app:/home/web/extra_app
    - ../submodules/scanagroempresa/kobo_sync_service:/home/web/kobo_sync_service
  environment:
    # Put random string on secret key
    DJANGO_SECRET_KEY: 2510)aks1u*9mgjjss_+s1@rutm3v(sfv5hw8k#*t(jsdmg-
    PYTHONPATH: /home/web/extra_app
    # Use this one if using Custom theme
#    PYTHONPATH: /home/web/extra_app:/home/web/scanagroempresa_custom_theme
    ROOT_URLCONF: scanterra.root_urls
    URL_PREFIX: 'scanagroempresa/'
    GEONODE_INDEX_PREFIX: 'administration/'
    DEBUG: True
    DJANGO_SETTINGS_MODULE: scanterra.settings_prod
    # Do not end with slash /
    SITEURL: http://scanagroempresa-docker.test
    STATIC_ROOT: /home/web/static
    MEDIA_ROOT: /home/web/media
    # For database
    PGDATABASE: scanweb
    PGUSER: docker
    PGPASSWORD: docker
    PGHOST: db
    PGPORT: 5432
    DATA_PGDATABASE: kobo_form_data
    DATA_PGUSER: docker
    DATA_PGPASSWORD: docker
    DATA_PGHOST: db
    DATA_PGPORT: 5432
    # For GeoNode (should not end with slash /)
    # Public resolvable address of GeoNode server to link the URL
    GEONODE_SERVER_PUBLIC_HOST: http://scanagroempresa-docker.test
    # Private or public address of GeoNode for SAE API connection
    GEONODE_SERVER_HOST: http://scanagroempresa-docker.test
    # Public address of GeoServer for API connections
    GEOSERVER_HOST: http://scanagroempresa-docker.test/geoserver
    # Set it to match GeoServer credentials
    GEOSERVER_ADMIN_USER: admin
    GEOSERVER_ADMIN_PASSWORD: admingeoserver
    GEONODE_PGDATABASE: gis
    GEONODE_PGUSER: docker
    GEONODE_PGPASSWORD: docker
    GEONODE_PGHOST: db
    GEONODE_PGPORT: 5432
    # For KOBO
    # To Kobocat
    KOBO_API_URL: http://test.scancollect.scanterra.com
    KOBO_API_CLIENTID: ''
    KOBO_API_CLIENTSECRET: ''
    KOBO_API_USER: ''
    KOBO_API_PASSWORD: ''
    # These settings after this is for low level database access
    # Since kobotoolbox stack is not managed by this orchestration, fill in
    # the correct credentials and database details that you are going to use.
    KOBO_PGDATABASE: kobotoolbox
    KOBO_PGUSER: docker
    KOBO_PGPASSWORD: docker
    KOBO_PGHOST: db
    KOBO_PGPORT: 5432
    # Redis Settings
    REDIS_HOST: redis
    REDIS_PORT: 6379
    REDIS_DEFAULT_DB: 1
    REDIS_SESSION_DB: 2
    # Skin App Settings
    # Set to true if you use a skin app
    USE_SCANAGROEMPRESA_THEME_APP: False
    SCANAGROEMPRESA_THEME_APP_PATH: /home/web/scanagroempresa_custom_theme
    SCANAGROEMPRESA_THEME_APP_NAME: scanagroempresa_custom_theme


geonode:
  environment:
    GEONODE_INSTANCE_NAME: geonode
    DEFAULT_BACKEND_DATASTORE: datastore
    GEONODE_DATABASE: gis
    GEONODE_DATABASE_USER: docker
    GEONODE_DATABASE_PASSWORD: docker
    GEONODE_GEODATABASE: geonode_data
    GEONODE_GEODATABASE_PASSWORD: geonode_data
    UWSGI_CMD: uwsgi --ini /usr/src/app/uwsgi.ini
    IS_CELERY: False
    C_FORCE_ROOT: 1
    # replaced with defaults in settings (ends with slash)
    GEOSERVER_BASE_URL: http://scanagroempresa-docker.test/geoserver/
    GEOSERVER_PUBLIC_LOCATION: http://scanagroempresa-docker.test/geoserver/
    GEOSERVER_LOCATION: http://geoserver:8080/geoserver/
    STATIC_ROOT: /home/web/static
    MEDIA_ROOT: /home/web/media
    GEOIP_PATH: /home/web/media/geoip.db
    ALLOWED_HOSTS: ['scanagroempresa-docker.test']
    ADMIN_EMAILS: dimas@kartoza.com
    GEOSERVER_ADMIN_PASSWORD: admingeoserver
    # Skin App Settings
    USE_GEONODE_THEME_APP: False
    GEONODE_THEME_APP_PATH: /usr/src/geonode_custom_theme
    GEONODE_THEME_APP_NAME: geonode_custom_theme

geoserver:
  environment:
    GEOSERVER_ADMIN_PASSWORD: admingeoserver
    SITEURL: http://scanagroempresa-docker.test/geoserver
    # The public url of GeoNode API to allow GeoServer to connect to it
    NGINX_BASE_URL: http://scanagroempresa-docker.test/

geonode_nginx:
  volumes:
    - ./sites-enabled/geoserver/django.conf:/etc/nginx/conf.d/default.conf

interpreters:

docker_port_forward:
  django:
    db: 6543
    elastic_search: 9200
    http: 63302
    ssh: 63403
    geoserver: 63305
    karma_tests: 63304
  scanagroempresa:
    ssh: 63404
    http: 63306
  web:
    http: 80
