#
# Production server with UWSGI configured to run on port 8080
# and web configured to run directly on port 80
#
# docker-compose build
# docker-compose up -d web
#
# See accompanying Make commands for easy collectstatic etc.

version: '2'
volumes:
  geoserver-data-dir:
services:
  smtp:
    image: catatnight/postfix
    environment:
      # You could change this to something more suitable
      - maildomain=kartoza.com
      - smtp_user=noreply:docker
    restart: unless-stopped

  db:
    image: kartoza/postgis:9.6-2.4
    environment:
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:2.4.2
    restart: unless-stopped
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  data-dir-conf:
    image: geosolutionsit/geoserver_data:2.13.x
    restart: on-failure
    command: /bin/true
    volumes:
      - geoserver-data-dir:/geoserver_data/data

  geoserver:
    image: geosolutionsit/geoserver-docker:2.13.x
    restart: unless-stopped
    depends_on:
      - db
      - data-dir-conf
    volumes:
      - geoserver-data-dir:/geoserver_data/data

  base_uwsgi:
    build:
      context: docker-geonode
      dockerfile: Dockerfile
    image: base_uwsgi:latest

  uwsgi:
    build:
      context: docker-geonode
    working_dir: /usr/src/app
    entrypoint: []
    environment:
      - DATABASE_NAME=gis
      - DATABASE_USERNAME=docker
      - DATABASE_PASSWORD=docker
      - DATABASE_HOST=db
      - DJANGO_SETTINGS_MODULE=core.settings.overrides
      - ASYNC_SIGNALS_GEONODE=True
      - USE_GEOSERVER=True
    links:
      - smtp:smtp
      - db:db
      - elasticsearch:elasticsearch
      - geoserver:geoserver
      - worker:worker
    volumes:
      - geoserver-data-dir:/usr/src/geonode/geoserver/data/data
      - ./transfer-data:/home/transfer/data
    restart: unless-stopped
    user: root

  worker:
    build:
      context: docker-geonode
    working_dir: /home/web/django_project
    command: celery -A core worker -Q celery,default,geonode,cleanup,update,email -B -l debug -n geonode.%h
    entrypoint: []
    environment:
      - DATABASE_NAME=gis
      - DATABASE_USERNAME=docker
      - DATABASE_PASSWORD=docker
      - DATABASE_HOST=db
      - DJANGO_SETTINGS_MODULE=core.settings.overrides
      - ASYNC_SIGNALS_GEONODE=True
      - USE_GEOSERVER=True
    links:
      - smtp:smtp
      - db:db
      - elasticsearch:elasticsearch
      - geoserver:geoserver
      - rabbitmq:rabbitmq
      - cache:cache
    volumes:
      - geoserver-data-dir:/usr/src/geonode/geoserver/data/data
      - ./transfer-data:/home/transfer/data
    restart: unless-stopped
    user: root

  dbbackups:
    image: kartoza/pg-backup:9.6
    hostname: pg-backups
    links:
      - db:db
    environment:
      # take care to let the project name below match that
      # declared in the top of the makefile
      - DUMPPREFIX=PG_scanagroempresa
      # These are all defaults anyway, but setting explicitly in
      # case we ever want to ever use different credentials
      - PGUSER=docker
      - PGPASSWORD=docker
      - PGPORT=5432
      - PGHOST=db
      - PGDATABASE=gis
    restart: unless-stopped

  geonode_nginx:
    image: nginx
    volumes:
      - ./sites-enabled/geoserver/uwsgi.conf:/etc/nginx/conf.d/default.conf
    links:
      - uwsgi:django
      - geoserver
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.6
    restart: unless-stopped

  cache:
   image: memcached
   entrypoint:
    - memcached
    - -m 64

  redis:
    image: redis:4.0.11
    volumes:
      - ./redis-data:/data/

  scanagroempresa:
    image: kartoza/scanagroempresa:dev
    build:
      context: docker-scanagroempresa
    working_dir: /home/web/extra_app
    volumes:
      - ./static:/home/web/static:rw
      - ./media:/home/web/media:rw
      - ./logs:/var/log/
    links:
      - redis:redis
    restart: unless-stopped

  transfer:
    image: kartoza/transfer.sh:rancher
    command: --provider local --basedir /data --listener 0.0.0.0:80 --web-base-url transfer --http-auth-user transferadmin --http-auth-pass transferadmin
    volumes:
      - ./transfer-data:/data
    ports:
      - 63307:80


  web:
    image: haproxy:latest
    volumes:
      - ./haproxy:/usr/local/etc/haproxy:ro
    links:
      - transfer
      - geonode_nginx:geonode
      - scanagroempresa
    restart: unless-stopped
